---
title: "Unlocking Collaborative Power with Git, GitHub CI/CD, and LLMs in Pharma"
author: "Ning Leng, Eli Miller, Ben Straub, Eric Nantz"
format: 
  revealjs:
    logo: images/rcon.png
    footer: Unlocking Collaborative Power with Git, GitHub CI/CD, and LLMs in Pharma
    transition: fade
    theme: serif
    chalkboard: true
revealjs-plugins:
  - codewindow
---

## Intro

Big Ideas:

* Tools that have been used on R Consortium Pilots to collaborate, ensure accuracy, reproducibility
* Opportunities to learn these tools!
* Demonstrations/Educational opportunities...

## Intro to R Consortium {.smaller}

<div style="text-align: center;"> <img src="./images/rconsortium.png" alt="xkcd" style="width: 1500px;"/> </div>

* Submission Workging Group meets the first Friday of every month.  Join the slack!

::: footer
[R Consortium](https://r-consortium.org/)
:::

## Intro to R Consortium R-based Submission Pilots to FDA

<div style="display: flex; justify-content: space-between; align-items: center;"> 
<img src="images/pilot1.png" alt="Hex 1" style="max-width: 18%; height: auto;"> 
<img src="images/pilot2.png" alt="Hex 2" style="max-width: 18%; height: auto;"> 
<img src="images/pilot3.png" alt="Hex 3" style="max-width: 18%; height: auto;"> 
<img src="images/pilot4a.png" alt="Hex 4a" style="max-width: 18%; height: auto;"> 
<img src="images/pilot4b.png" alt="Hex 4b" style="max-width: 20%; height: auto;">
<img src="images/pilot5.png" alt="Hex 5" style="max-width: 18%; height: auto;">
<img src="images/OIP.png" alt="Hex 5" style="max-width: 20%; height: auto;">
<img src="images/OIP.png" alt="Hex 5" style="max-width: 20%; height: auto;">
<img src="images/OIP.png" alt="Hex 5" style="max-width: 20%; height: auto;">
</div>

## Problem Statement

:::{.incremental}

Questions: 

* How do people in the Pilots collaborate, ensure accuracy and reproducibility while working across multiple companies, platforms, OS, timezones and skillsets?


* renv
* git, GitHub
* CI/CD
* LLMs

:::

## Reproducibile Environments with Open Source Products

<div style="text-align: center;"> <img src="./images/replication_crisis.png" alt="xkcd" style="width: 350px;"/> </div>

::: footer
[xkcd](https://xkcd.com/)
:::

## Reproducibile Environments with Open Source Products

:::{.incremental}

* A drug company uses open source products, like R, to demonstrate that a drug is safe and effective.

* How can the company ensure the analysis is reproducible when given to a regulatory agency? 

:::

## renv: Reproducible R Package Environments <img src="./images/renv.png" alt="renv Hex Sticker" style="width: 75px; vertical-align: middle; margin-left: 10px;"/>

:::{.incremental}

* Isolates project-specific R package libraries
* Captures and locks package versions for reproducibility
* Simplifies dependency management and restoration
* Integrates smoothly with RStudio and other tools
* Facilitates collaboration by sharing a consistent environment

* The Pilots did/are using this - just in case this wasn't clear!! `renv.lock` is the anchor for everything.
:::

## All the renv you need to know (just 8!) {.smaller}

`renv::init()`: Initializes a new renv project by creating a project-specific library and a lockfile. Use this at the start of a new project.

`renv::install()`: Installs packages into your projectâ€™s local library. This command can install a package from CRAN, GitHub, or local source.

`renv::snapshot()`: Captures the state of your current project environment and writes it to the renv.lock file. This ensures that the project dependencies are tracked for future use or collaboration.

`renv::restore()`: Restores the project library from the renv.lock file. Use this when youâ€™re setting up the project on a new system or when you need to ensure package versions match those recorded in the lockfile.

## All the renv you need to know (just 8!) {.smaller}

`renv::update()`: Updates the packages in your project and optionally updates the renv.lock file with the new versions.

`renv::status()`: Checks for any discrepancies between the state of the projectâ€™s library and the renv.lock file. This helps identify packages that might be out-of-sync.

`renv::remove()`: Removes one or more packages from your projectâ€™s library, making it easy to manage unused dependencies.

`renv::clean()`: Cleans up the projectâ€™s library by removing unused packages that arenâ€™t required based on the renv.lock file.

## renv tips and tricks

* We don't need to deliver every package to regulatory agencies, e.g. as we have built custom solutions to help with our processes we realized these are not actually used in the analysis.  How can we ignore them!?! 

* `renvignore` is a big win here!

* Don't edit the `renv.lock` file manually - use the nice functions!

## renv for Pilots

* Using renv allows us to document to FDA our environments
* FDA uses this ...

## Gitflow

::::{.columns}

:::{.column width="50%"}

_Our goals_:

* To maximize useful dev work,

* to maximize code quality, and

* to maximize code velocity.

:::

:::{.column width="50%"}

![](images/nomnoml.png)

:::

::::

::: aside
* Nonauthoritative, only take the parts you need!
:::

## ðŸš€Deployments

Code being deployed out to the world

![](images/deployment.png)

## Pull Requests and Collaboration

Code moving between branches or a transision of "state." A structured way for reviewing code

![](images/PRScreenshot.png){fig-align="center"}

## Code Quality *Automated*

:::: {.columns}

::: {.column width="50%"}

-   Code Style
-   Linting
-   Spelling
-   Testing
-   Code Coverage
-   Build Check

:::

::: {.column witdth="50%"}

![](images/WorkflowScreenshot.png)

:::

::::

## Code Quality *and* AI

:::: {.columns}

::: {.column width="50%"}

ðŸ’¬ A **structured** chat

```         
type_qc_diff <- type_object(
  difference_list = type_string(),
  same_conclusion = type_boolean(),
  difference_score = type_integer()
)
res <- chat$chat_structured(
  prompt,
  new_image,
  comp_image,
  type = type_qc_diffs
)
```

:::

::: {.column width="50%"}
ðŸ¤– and a **structured** result

![](images/BotComment.png)

:::

::::

{{< include _automation.qmd >}}
